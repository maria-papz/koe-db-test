# Generated by Django 5.1.6 on 2025-09-09 10:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Default Workflow Name', max_length=255)),
                ('workflow_type', models.CharField(choices=[('ECB', 'ECB Request'), ('CYSTAT', 'CyStat Request'), ('EUROSTAT', 'EuroStat Request')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('schedule_cron', models.CharField(default='0 0 1 * *', max_length=100)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='useraccount_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='useraccount_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50, null=True, unique=True)),
                ('description', models.TextField()),
                ('source', models.CharField(default='manual entry', max_length=100)),
                ('data_frequency_years', models.FloatField(default=0.25)),
                ('seasonally_adjusted', models.BooleanField(default=False)),
                ('base_year', models.IntegerField(blank=True, null=True)),
                ('is_custom', models.BooleanField(default=False)),
                ('currentPrices', models.BooleanField(default=True)),
                ('frequency', models.CharField(choices=[('MINUTE', 'Per Minute'), ('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('BIWEEKLY', 'Biweekly'), ('MONTHLY', 'Monthly'), ('BIMONTHLY', 'Every 2 Months'), ('QUARTERLY', 'Quarterly'), ('TRIANNUAL', 'Every 4 Months'), ('SEMIANNUAL', 'Semiannual / Biannual'), ('ANNUAL', 'Annual'), ('CUSTOM', 'Custom / Other')], default='CUSTOM', max_length=20)),
                ('other_frequency', models.CharField(blank=True, help_text='Use this field if frequency is CUSTOM', max_length=50, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='koe_db.category')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='koe_db.country')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='koe_db.region')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='koe_db.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('period', models.CharField(blank=True, max_length=20, null=True)),
                ('value', models.DecimalField(decimal_places=5, max_digits=20, null=True)),
                ('isEstimate', models.BooleanField(default=False)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='koe_db.indicator')),
            ],
        ),
        migrations.CreateModel(
            name='CustomTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('indicators', models.ManyToManyField(related_name='custom_tables', to='koe_db.indicator')),
            ],
        ),
        migrations.CreateModel(
            name='CustomIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formula', models.TextField()),
                ('base_indicators', models.ManyToManyField(to='koe_db.indicator')),
                ('indicator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_formula', to='koe_db.indicator')),
            ],
        ),
        migrations.CreateModel(
            name='AccessLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('public', 'Public Viewing'), ('unrestricted', 'Unrestricted Access'), ('organization', 'Organization Members'), ('restricted', 'Restricted Access'), ('org_full_public', 'Organization Full Public')], default='public', help_text='Controls default permissions for this indicator', max_length=20)),
                ('indicator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='access_level', to='koe_db.indicator')),
            ],
        ),
        migrations.AddField(
            model_name='country',
            name='regions',
            field=models.ManyToManyField(blank=True, to='koe_db.region'),
        ),
        migrations.CreateModel(
            name='UserFavouriteIndicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicators', models.ManyToManyField(to='koe_db.indicator')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFavouriteTables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tables', models.ManyToManyField(to='koe_db.customtable')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFollowsUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_users', models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EuroStatRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='The Eurostat API URL to fetch data from')),
                ('frequency', models.CharField(help_text="Data frequency (e.g., 'Annual', 'Monthly', 'Quarterly')", max_length=20)),
                ('workflow', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='eurostat_request', to='koe_db.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='ECBRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table', models.CharField(max_length=100)),
                ('parameters', models.CharField(max_length=255)),
                ('frequency', models.CharField(max_length=20)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecb_requests', to='koe_db.indicator')),
                ('workflow', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ecb_request', to='koe_db.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='CyStatRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('request_body', models.JSONField()),
                ('frequency', models.CharField(max_length=20)),
                ('start_period', models.CharField(max_length=20)),
                ('workflow', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cystat_request', to='koe_db.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_time', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='PENDING', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='koe_db.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('DATA_UPDATE', 'Data Update'), ('INDICATOR_EDIT', 'Indicator Edit'), ('INDICATOR_CREATE', 'Indicator Create'), ('INDICATOR_DELETE', 'Indicator Delete'), ('FORMULA_UPDATE', 'Formula Update')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='koe_db.indicator')),
                ('run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='koe_db.workflowrun')),
            ],
        ),
        migrations.CreateModel(
            name='EuroStatIndicatorMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimension_values', models.JSONField(help_text='Mapping of dimension names to their selected values for this indicator')),
                ('eurostat_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_mappings', to='koe_db.eurostatrequest')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eurostat_mappings', to='koe_db.indicator')),
            ],
            options={
                'unique_together': {('eurostat_request', 'indicator')},
            },
        ),
        migrations.CreateModel(
            name='CyStatIndicatorMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_indices', models.JSONField()),
                ('cystat_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_mappings', to='koe_db.cystatrequest')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cystat_mappings', to='koe_db.indicator')),
            ],
            options={
                'unique_together': {('cystat_request', 'indicator')},
            },
        ),
        migrations.CreateModel(
            name='IndicatorPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view', models.BooleanField(default=False)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions', to='koe_db.indicator')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'indicator')},
            },
        ),
    ]
